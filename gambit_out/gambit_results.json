[
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -12,7 +12,8 @@\n     using SafeMath  for uint;\n     using UQ112x112 for uint224;\n \n-    uint public constant MINIMUM_LIQUIDITY = 10**3;\n+    /// SwapArgumentsOperatorMutation(`10**3` |==> `3 ** 10`) of: `uint public constant MINIMUM_LIQUIDITY = 10**3;`\n+    uint public constant MINIMUM_LIQUIDITY = 3 ** 10;\n     bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\n \n     address public factory;\n",
    "id": "1",
    "name": "mutants/1/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -29,7 +29,8 @@\n \n     uint private unlocked = 1;\n     modifier lock() {\n-        require(unlocked == 1, 'UniswapV2: LOCKED');\n+        /// DeleteExpressionMutation(`require(unlocked == 1, 'UniswapV2: LOCKED')` |==> `assert(true)`) of: `require(unlocked == 1, 'UniswapV2: LOCKED');`\n+        assert(true);\n         unlocked = 0;\n         _;\n         unlocked = 1;\n",
    "id": "2",
    "name": "mutants/2/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -29,7 +29,8 @@\n \n     uint private unlocked = 1;\n     modifier lock() {\n-        require(unlocked == 1, 'UniswapV2: LOCKED');\n+        /// RequireMutation(`unlocked == 1` |==> `true`) of: `require(unlocked == 1, 'UniswapV2: LOCKED');`\n+        require(true, 'UniswapV2: LOCKED');\n         unlocked = 0;\n         _;\n         unlocked = 1;\n",
    "id": "3",
    "name": "mutants/3/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -30,7 +30,8 @@\n     uint private unlocked = 1;\n     modifier lock() {\n         require(unlocked == 1, 'UniswapV2: LOCKED');\n-        unlocked = 0;\n+        /// AssignmentMutation(`0` |==> `1`) of: `unlocked = 0;`\n+        unlocked = 1;\n         _;\n         unlocked = 1;\n     }\n",
    "id": "4",
    "name": "mutants/4/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -36,7 +36,8 @@\n     }\n \n     function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\n-        _reserve0 = reserve0;\n+        /// AssignmentMutation(`reserve0` |==> `1`) of: `_reserve0 = reserve0;`\n+        _reserve0 = 1;\n         _reserve1 = reserve1;\n         _blockTimestampLast = blockTimestampLast;\n     }\n",
    "id": "5",
    "name": "mutants/5/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -37,7 +37,8 @@\n \n     function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\n         _reserve0 = reserve0;\n-        _reserve1 = reserve1;\n+        /// AssignmentMutation(`reserve1` |==> `1`) of: `_reserve1 = reserve1;`\n+        _reserve1 = 1;\n         _blockTimestampLast = blockTimestampLast;\n     }\n \n",
    "id": "6",
    "name": "mutants/6/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -38,7 +38,8 @@\n     function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\n         _reserve0 = reserve0;\n         _reserve1 = reserve1;\n-        _blockTimestampLast = blockTimestampLast;\n+        /// AssignmentMutation(`blockTimestampLast` |==> `0`) of: `_blockTimestampLast = blockTimestampLast;`\n+        _blockTimestampLast = 0;\n     }\n \n     function _safeTransfer(address token, address to, uint value) private {\n",
    "id": "7",
    "name": "mutants/7/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -43,7 +43,8 @@\n \n     function _safeTransfer(address token, address to, uint value) private {\n         (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\n-        require(success && (data.length == 0 || abi.decode(data, (bool))), 'UniswapV2: TRANSFER_FAILED');\n+        /// DeleteExpressionMutation(`require(success && (data.length == 0 || abi.decode(data, (bool))), 'UniswapV2: TRANSFER_FAILED')` |==> `assert(true)`) of: `require(success && (data.length == 0 || abi.decode(data, (bool))), 'UniswapV2: TRANSFER_FAILED');`\n+        assert(true);\n     }\n \n     event Mint(address indexed sender, uint amount0, uint amount1);\n",
    "id": "8",
    "name": "mutants/8/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -65,7 +65,8 @@\n     // called once by the factory at time of deployment\n     function initialize(address _token0, address _token1) external {\n         require(msg.sender == factory, 'UniswapV2: FORBIDDEN'); // sufficient check\n-        token0 = _token0;\n+        /// DeleteExpressionMutation(`token0 = _token0` |==> `assert(true)`) of: `token0 = _token0;`\n+        assert(true);\n         token1 = _token1;\n     }\n \n",
    "id": "9",
    "name": "mutants/9/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -71,7 +71,8 @@\n \n     // update reserves and, on the first call per block, price accumulators\n     function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n-        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\n+        /// DeleteExpressionMutation(`require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW')` |==> `assert(true)`) of: `require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');`\n+        assert(true);\n         uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n",
    "id": "10",
    "name": "mutants/10/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -71,7 +71,8 @@\n \n     // update reserves and, on the first call per block, price accumulators\n     function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n-        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\n+        /// RequireMutation(`balance0 <= uint112(-1) && balance1 <= uint112(-1)` |==> `false`) of: `require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');`\n+        require(false, 'UniswapV2: OVERFLOW');\n         uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n",
    "id": "11",
    "name": "mutants/11/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -71,7 +71,8 @@\n \n     // update reserves and, on the first call per block, price accumulators\n     function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n-        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\n+        /// UnaryOperatorMutation(`-` |==> `~`) of: `require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');`\n+        require(balance0 <= uint112(~1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\n         uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n",
    "id": "12",
    "name": "mutants/12/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -72,7 +72,8 @@\n     // update reserves and, on the first call per block, price accumulators\n     function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n         require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\n-        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n+        /// BinaryOpMutation(`%` |==> `+`) of: `uint32 blockTimestamp = uint32(block.timestamp % 2**32);`\n+        uint32 blockTimestamp = uint32(block.timestamp+2**32);\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n",
    "id": "13",
    "name": "mutants/13/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -72,7 +72,8 @@\n     // update reserves and, on the first call per block, price accumulators\n     function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n         require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\n-        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n+        /// SwapArgumentsOperatorMutation(`2**32` |==> `32 ** 2`) of: `uint32 blockTimestamp = uint32(block.timestamp % 2**32);`\n+        uint32 blockTimestamp = uint32(block.timestamp % 32 ** 2);\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n",
    "id": "14",
    "name": "mutants/14/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -73,7 +73,8 @@\n     function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n         require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'UniswapV2: OVERFLOW');\n         uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n-        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n+        /// BinaryOpMutation(`-` |==> `/`) of: `uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired`\n+        uint32 timeElapsed = blockTimestamp/blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n             price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n",
    "id": "15",
    "name": "mutants/15/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -76,7 +76,8 @@\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n-            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n+            /// DeleteExpressionMutation(`price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed` |==> `assert(true)`) of: `price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;`\n+            assert(true);\n             price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n         }\n         reserve0 = uint112(balance0);\n",
    "id": "16",
    "name": "mutants/16/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -76,7 +76,8 @@\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n-            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n+            /// AssignmentMutation(`uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed` |==> `1`) of: `price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;`\n+            price0CumulativeLast += 1;\n             price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n         }\n         reserve0 = uint112(balance0);\n",
    "id": "17",
    "name": "mutants/17/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -76,7 +76,8 @@\n         uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n-            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n+            /// BinaryOpMutation(`*` |==> `%`) of: `price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;`\n+            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0))%timeElapsed;\n             price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n         }\n         reserve0 = uint112(balance0);\n",
    "id": "18",
    "name": "mutants/18/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -77,7 +77,8 @@\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n             price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n-            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n+            /// AssignmentMutation(`uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed` |==> `1`) of: `price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;`\n+            price1CumulativeLast += 1;\n         }\n         reserve0 = uint112(balance0);\n         reserve1 = uint112(balance1);\n",
    "id": "19",
    "name": "mutants/19/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -77,7 +77,8 @@\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n             price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n-            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n+            /// BinaryOpMutation(`*` |==> `-`) of: `price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;`\n+            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1))-timeElapsed;\n         }\n         reserve0 = uint112(balance0);\n         reserve1 = uint112(balance1);\n",
    "id": "20",
    "name": "mutants/20/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -77,7 +77,8 @@\n         if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n             // * never overflows, and + overflow is desired\n             price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n-            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n+            /// BinaryOpMutation(`*` |==> `%`) of: `price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;`\n+            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1))%timeElapsed;\n         }\n         reserve0 = uint112(balance0);\n         reserve1 = uint112(balance1);\n",
    "id": "21",
    "name": "mutants/21/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -79,7 +79,8 @@\n             price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n             price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n         }\n-        reserve0 = uint112(balance0);\n+        /// DeleteExpressionMutation(`reserve0 = uint112(balance0)` |==> `assert(true)`) of: `reserve0 = uint112(balance0);`\n+        assert(true);\n         reserve1 = uint112(balance1);\n         blockTimestampLast = blockTimestamp;\n         emit Sync(reserve0, reserve1);\n",
    "id": "22",
    "name": "mutants/22/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -79,7 +79,8 @@\n             price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n             price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n         }\n-        reserve0 = uint112(balance0);\n+        /// AssignmentMutation(`uint112(balance0)` |==> `0`) of: `reserve0 = uint112(balance0);`\n+        reserve0 = 0;\n         reserve1 = uint112(balance1);\n         blockTimestampLast = blockTimestamp;\n         emit Sync(reserve0, reserve1);\n",
    "id": "23",
    "name": "mutants/23/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -79,7 +79,8 @@\n             price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n             price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n         }\n-        reserve0 = uint112(balance0);\n+        /// AssignmentMutation(`uint112(balance0)` |==> `1`) of: `reserve0 = uint112(balance0);`\n+        reserve0 = 1;\n         reserve1 = uint112(balance1);\n         blockTimestampLast = blockTimestamp;\n         emit Sync(reserve0, reserve1);\n",
    "id": "24",
    "name": "mutants/24/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -80,7 +80,8 @@\n             price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n         }\n         reserve0 = uint112(balance0);\n-        reserve1 = uint112(balance1);\n+        /// DeleteExpressionMutation(`reserve1 = uint112(balance1)` |==> `assert(true)`) of: `reserve1 = uint112(balance1);`\n+        assert(true);\n         blockTimestampLast = blockTimestamp;\n         emit Sync(reserve0, reserve1);\n     }\n",
    "id": "25",
    "name": "mutants/25/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -88,7 +88,8 @@\n     // if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)\n     function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n         address feeTo = IUniswapV2Factory(factory).feeTo();\n-        feeOn = feeTo != address(0);\n+        /// DeleteExpressionMutation(`feeOn = feeTo != address(0)` |==> `assert(true)`) of: `feeOn = feeTo != address(0);`\n+        assert(true);\n         uint _kLast = kLast; // gas savings\n         if (feeOn) {\n             if (_kLast != 0) {\n",
    "id": "26",
    "name": "mutants/26/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -88,7 +88,8 @@\n     // if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)\n     function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n         address feeTo = IUniswapV2Factory(factory).feeTo();\n-        feeOn = feeTo != address(0);\n+        /// AssignmentMutation(`feeTo != address(0)` |==> `true`) of: `feeOn = feeTo != address(0);`\n+        feeOn = true;\n         uint _kLast = kLast; // gas savings\n         if (feeOn) {\n             if (_kLast != 0) {\n",
    "id": "27",
    "name": "mutants/27/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -88,7 +88,8 @@\n     // if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)\n     function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n         address feeTo = IUniswapV2Factory(factory).feeTo();\n-        feeOn = feeTo != address(0);\n+        /// AssignmentMutation(`feeTo != address(0)` |==> `false`) of: `feeOn = feeTo != address(0);`\n+        feeOn = false;\n         uint _kLast = kLast; // gas savings\n         if (feeOn) {\n             if (_kLast != 0) {\n",
    "id": "28",
    "name": "mutants/28/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -90,7 +90,8 @@\n         address feeTo = IUniswapV2Factory(factory).feeTo();\n         feeOn = feeTo != address(0);\n         uint _kLast = kLast; // gas savings\n-        if (feeOn) {\n+        /// IfStatementMutation(`feeOn` |==> `true`) of: `if (feeOn) {`\n+        if (true) {\n             if (_kLast != 0) {\n                 uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                 uint rootKLast = Math.sqrt(_kLast);\n",
    "id": "29",
    "name": "mutants/29/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -90,7 +90,8 @@\n         address feeTo = IUniswapV2Factory(factory).feeTo();\n         feeOn = feeTo != address(0);\n         uint _kLast = kLast; // gas savings\n-        if (feeOn) {\n+        /// IfStatementMutation(`feeOn` |==> `false`) of: `if (feeOn) {`\n+        if (false) {\n             if (_kLast != 0) {\n                 uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                 uint rootKLast = Math.sqrt(_kLast);\n",
    "id": "30",
    "name": "mutants/30/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -101,7 +101,8 @@\n                     if (liquidity > 0) _mint(feeTo, liquidity);\n                 }\n             }\n-        } else if (_kLast != 0) {\n+        /// IfStatementMutation(`_kLast != 0` |==> `true`) of: `} else if (_kLast != 0) {`\n+        } else if (true) {\n             kLast = 0;\n         }\n     }\n",
    "id": "31",
    "name": "mutants/31/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -91,7 +91,8 @@\n         feeOn = feeTo != address(0);\n         uint _kLast = kLast; // gas savings\n         if (feeOn) {\n-            if (_kLast != 0) {\n+            /// IfStatementMutation(`_kLast != 0` |==> `true`) of: `if (_kLast != 0) {`\n+            if (true) {\n                 uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                 uint rootKLast = Math.sqrt(_kLast);\n                 if (rootK > rootKLast) {\n",
    "id": "32",
    "name": "mutants/32/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -91,7 +91,8 @@\n         feeOn = feeTo != address(0);\n         uint _kLast = kLast; // gas savings\n         if (feeOn) {\n-            if (_kLast != 0) {\n+            /// IfStatementMutation(`_kLast != 0` |==> `false`) of: `if (_kLast != 0) {`\n+            if (false) {\n                 uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                 uint rootKLast = Math.sqrt(_kLast);\n                 if (rootK > rootKLast) {\n",
    "id": "33",
    "name": "mutants/33/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -97,7 +97,8 @@\n                 if (rootK > rootKLast) {\n                     uint numerator = totalSupply.mul(rootK.sub(rootKLast));\n                     uint denominator = rootK.mul(5).add(rootKLast);\n-                    uint liquidity = numerator / denominator;\n+                    /// BinaryOpMutation(`/` |==> `%`) of: `uint liquidity = numerator / denominator;`\n+                    uint liquidity = numerator%denominator;\n                     if (liquidity > 0) _mint(feeTo, liquidity);\n                 }\n             }\n",
    "id": "34",
    "name": "mutants/34/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -97,7 +97,8 @@\n                 if (rootK > rootKLast) {\n                     uint numerator = totalSupply.mul(rootK.sub(rootKLast));\n                     uint denominator = rootK.mul(5).add(rootKLast);\n-                    uint liquidity = numerator / denominator;\n+                    /// BinaryOpMutation(`/` |==> `**`) of: `uint liquidity = numerator / denominator;`\n+                    uint liquidity = numerator**denominator;\n                     if (liquidity > 0) _mint(feeTo, liquidity);\n                 }\n             }\n",
    "id": "35",
    "name": "mutants/35/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -97,7 +97,8 @@\n                 if (rootK > rootKLast) {\n                     uint numerator = totalSupply.mul(rootK.sub(rootKLast));\n                     uint denominator = rootK.mul(5).add(rootKLast);\n-                    uint liquidity = numerator / denominator;\n+                    /// SwapArgumentsOperatorMutation(`numerator / denominator` |==> `denominator / numerator`) of: `uint liquidity = numerator / denominator;`\n+                    uint liquidity = denominator / numerator;\n                     if (liquidity > 0) _mint(feeTo, liquidity);\n                 }\n             }\n",
    "id": "36",
    "name": "mutants/36/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -98,7 +98,8 @@\n                     uint numerator = totalSupply.mul(rootK.sub(rootKLast));\n                     uint denominator = rootK.mul(5).add(rootKLast);\n                     uint liquidity = numerator / denominator;\n-                    if (liquidity > 0) _mint(feeTo, liquidity);\n+                    /// IfStatementMutation(`liquidity > 0` |==> `false`) of: `if (liquidity > 0) _mint(feeTo, liquidity);`\n+                    if (false) _mint(feeTo, liquidity);\n                 }\n             }\n         } else if (_kLast != 0) {\n",
    "id": "37",
    "name": "mutants/37/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -116,7 +116,8 @@\n \n         bool feeOn = _mintFee(_reserve0, _reserve1);\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n-        if (_totalSupply == 0) {\n+        /// IfStatementMutation(`_totalSupply == 0` |==> `true`) of: `if (_totalSupply == 0) {`\n+        if (true) {\n             liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n         } else {\n",
    "id": "38",
    "name": "mutants/38/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -120,7 +120,8 @@\n             liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n         } else {\n-            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n+            /// AssignmentMutation(`Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1)` |==> `0`) of: `liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);`\n+            liquidity = 0;\n         }\n         require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n         _mint(to, liquidity);\n",
    "id": "39",
    "name": "mutants/39/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -120,7 +120,8 @@\n             liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n         } else {\n-            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n+            /// AssignmentMutation(`Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1)` |==> `1`) of: `liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);`\n+            liquidity = 1;\n         }\n         require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n         _mint(to, liquidity);\n",
    "id": "40",
    "name": "mutants/40/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -120,7 +120,8 @@\n             liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n         } else {\n-            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n+            /// BinaryOpMutation(`/` |==> `%`) of: `liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);`\n+            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply)%_reserve1);\n         }\n         require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n         _mint(to, liquidity);\n",
    "id": "41",
    "name": "mutants/41/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -122,7 +122,8 @@\n         } else {\n             liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n         }\n-        require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n+        /// RequireMutation(`liquidity > 0` |==> `true`) of: `require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');`\n+        require(true, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n         _mint(to, liquidity);\n \n         _update(balance0, balance1, _reserve0, _reserve1);\n",
    "id": "42",
    "name": "mutants/42/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -122,7 +122,8 @@\n         } else {\n             liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n         }\n-        require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n+        /// SwapArgumentsOperatorMutation(`liquidity > 0` |==> `0 > liquidity`) of: `require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');`\n+        require(0 > liquidity, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n         _mint(to, liquidity);\n \n         _update(balance0, balance1, _reserve0, _reserve1);\n",
    "id": "43",
    "name": "mutants/43/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -125,7 +125,8 @@\n         require(liquidity > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED');\n         _mint(to, liquidity);\n \n-        _update(balance0, balance1, _reserve0, _reserve1);\n+        /// DeleteExpressionMutation(`_update(balance0, balance1, _reserve0, _reserve1)` |==> `assert(true)`) of: `_update(balance0, balance1, _reserve0, _reserve1);`\n+        assert(true);\n         if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n         emit Mint(msg.sender, amount0, amount1);\n     }\n",
    "id": "44",
    "name": "mutants/44/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -141,7 +141,8 @@\n \n         bool feeOn = _mintFee(_reserve0, _reserve1);\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n-        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n+        /// BinaryOpMutation(`/` |==> `+`) of: `amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution`\n+        amount0 = liquidity.mul(balance0)+_totalSupply; // using balances ensures pro-rata distribution\n         amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n         require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n",
    "id": "45",
    "name": "mutants/45/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -141,7 +141,8 @@\n \n         bool feeOn = _mintFee(_reserve0, _reserve1);\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n-        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n+        /// SwapArgumentsOperatorMutation(`liquidity.mul(balance0) / _totalSupply` |==> `_totalSupply / liquidity.mul(balance0)`) of: `amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution`\n+        amount0 = _totalSupply / liquidity.mul(balance0); // using balances ensures pro-rata distribution\n         amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n         require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n",
    "id": "46",
    "name": "mutants/46/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -142,7 +142,8 @@\n         bool feeOn = _mintFee(_reserve0, _reserve1);\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n         amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n-        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n+        /// DeleteExpressionMutation(`amount1 = liquidity.mul(balance1) / _totalSupply` |==> `assert(true)`) of: `amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution`\n+        assert(true); // using balances ensures pro-rata distribution\n         require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n         _safeTransfer(_token0, to, amount0);\n",
    "id": "47",
    "name": "mutants/47/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -142,7 +142,8 @@\n         bool feeOn = _mintFee(_reserve0, _reserve1);\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n         amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n-        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n+        /// AssignmentMutation(`liquidity.mul(balance1) / _totalSupply` |==> `1`) of: `amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution`\n+        amount1 = 1; // using balances ensures pro-rata distribution\n         require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n         _safeTransfer(_token0, to, amount0);\n",
    "id": "48",
    "name": "mutants/48/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -142,7 +142,8 @@\n         bool feeOn = _mintFee(_reserve0, _reserve1);\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n         amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n-        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n+        /// BinaryOpMutation(`/` |==> `*`) of: `amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution`\n+        amount1 = liquidity.mul(balance1)*_totalSupply; // using balances ensures pro-rata distribution\n         require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n         _safeTransfer(_token0, to, amount0);\n",
    "id": "49",
    "name": "mutants/49/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n         amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n         amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n-        require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n+        /// SwapArgumentsOperatorMutation(`amount0 > 0` |==> `0 > amount0`) of: `require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');`\n+        require(0 > amount0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n         _safeTransfer(_token0, to, amount0);\n         _safeTransfer(_token1, to, amount1);\n",
    "id": "50",
    "name": "mutants/50/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -143,7 +143,8 @@\n         uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n         amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n         amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n-        require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n+        /// SwapArgumentsOperatorMutation(`amount1 > 0` |==> `0 > amount1`) of: `require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');`\n+        require(amount0 > 0 && 0 > amount1, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n         _safeTransfer(_token0, to, amount0);\n         _safeTransfer(_token1, to, amount1);\n",
    "id": "51",
    "name": "mutants/51/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -146,7 +146,8 @@\n         require(amount0 > 0 && amount1 > 0, 'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED');\n         _burn(address(this), liquidity);\n         _safeTransfer(_token0, to, amount0);\n-        _safeTransfer(_token1, to, amount1);\n+        /// DeleteExpressionMutation(`_safeTransfer(_token1, to, amount1)` |==> `assert(true)`) of: `_safeTransfer(_token1, to, amount1);`\n+        assert(true);\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n \n",
    "id": "52",
    "name": "mutants/52/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -151,7 +151,8 @@\n         balance1 = IERC20(_token1).balanceOf(address(this));\n \n         _update(balance0, balance1, _reserve0, _reserve1);\n-        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n+        /// IfStatementMutation(`feeOn` |==> `false`) of: `if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date`\n+        if (false) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n         emit Burn(msg.sender, amount0, amount1, to);\n     }\n \n",
    "id": "53",
    "name": "mutants/53/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -157,7 +157,8 @@\n \n     // this low-level function should be called from a contract which performs important safety checks\n     function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n-        require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n+        /// DeleteExpressionMutation(`require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT')` |==> `assert(true)`) of: `require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');`\n+        assert(true);\n         (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n         require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n \n",
    "id": "54",
    "name": "mutants/54/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -157,7 +157,8 @@\n \n     // this low-level function should be called from a contract which performs important safety checks\n     function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n-        require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n+        /// RequireMutation(`amount0Out > 0 || amount1Out > 0` |==> `true`) of: `require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');`\n+        require(true, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n         (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n         require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n \n",
    "id": "55",
    "name": "mutants/55/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -157,7 +157,8 @@\n \n     // this low-level function should be called from a contract which performs important safety checks\n     function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n-        require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n+        /// RequireMutation(`amount0Out > 0 || amount1Out > 0` |==> `false`) of: `require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');`\n+        require(false, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n         (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n         require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n \n",
    "id": "56",
    "name": "mutants/56/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -159,7 +159,8 @@\n     function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n         require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n         (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n-        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n+        /// DeleteExpressionMutation(`require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY')` |==> `assert(true)`) of: `require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');`\n+        assert(true);\n \n         uint balance0;\n         uint balance1;\n",
    "id": "57",
    "name": "mutants/57/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -159,7 +159,8 @@\n     function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n         require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n         (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n-        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n+        /// RequireMutation(`amount0Out < _reserve0 && amount1Out < _reserve1` |==> `true`) of: `require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');`\n+        require(true, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n \n         uint balance0;\n         uint balance1;\n",
    "id": "58",
    "name": "mutants/58/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -159,7 +159,8 @@\n     function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n         require(amount0Out > 0 || amount1Out > 0, 'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT');\n         (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n-        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n+        /// SwapArgumentsOperatorMutation(`amount1Out < _reserve1` |==> `_reserve1 < amount1Out`) of: `require(amount0Out < _reserve0 && amount1Out < _reserve1, 'UniswapV2: INSUFFICIENT_LIQUIDITY');`\n+        require(amount0Out < _reserve0 && _reserve1 < amount1Out, 'UniswapV2: INSUFFICIENT_LIQUIDITY');\n \n         uint balance0;\n         uint balance1;\n",
    "id": "59",
    "name": "mutants/59/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -167,7 +167,8 @@\n         address _token0 = token0;\n         address _token1 = token1;\n         require(to != _token0 && to != _token1, 'UniswapV2: INVALID_TO');\n-        if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n+        /// IfStatementMutation(`amount0Out > 0` |==> `false`) of: `if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens`\n+        if (false) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n         if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n         if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n         balance0 = IERC20(_token0).balanceOf(address(this));\n",
    "id": "60",
    "name": "mutants/60/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -168,7 +168,8 @@\n         address _token1 = token1;\n         require(to != _token0 && to != _token1, 'UniswapV2: INVALID_TO');\n         if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n-        if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n+        /// DeleteExpressionMutation(`_safeTransfer(_token1, to, amount1Out)` |==> `assert(true)`) of: `if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens`\n+        if (amount1Out > 0) assert(true); // optimistically transfer tokens\n         if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n",
    "id": "61",
    "name": "mutants/61/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -169,7 +169,8 @@\n         require(to != _token0 && to != _token1, 'UniswapV2: INVALID_TO');\n         if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n         if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n-        if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n+        /// SwapArgumentsOperatorMutation(`data.length > 0` |==> `0 > data.length`) of: `if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);`\n+        if (0 > data.length) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n",
    "id": "62",
    "name": "mutants/62/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n         if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n         if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n         balance0 = IERC20(_token0).balanceOf(address(this));\n-        balance1 = IERC20(_token1).balanceOf(address(this));\n+        /// DeleteExpressionMutation(`balance1 = IERC20(_token1).balanceOf(address(this))` |==> `assert(true)`) of: `balance1 = IERC20(_token1).balanceOf(address(this));`\n+        assert(true);\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n",
    "id": "63",
    "name": "mutants/63/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n         if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n         if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n         balance0 = IERC20(_token0).balanceOf(address(this));\n-        balance1 = IERC20(_token1).balanceOf(address(this));\n+        /// AssignmentMutation(`IERC20(_token1).balanceOf(address(this))` |==> `1`) of: `balance1 = IERC20(_token1).balanceOf(address(this));`\n+        balance1 = 1;\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n",
    "id": "64",
    "name": "mutants/64/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -173,7 +173,8 @@\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n-        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `+`) of: `uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;`\n+        uint amount0In = balance0 > _reserve0+amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n",
    "id": "65",
    "name": "mutants/65/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -173,7 +173,8 @@\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n-        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `%`) of: `uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;`\n+        uint amount0In = balance0 > _reserve0%amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n",
    "id": "66",
    "name": "mutants/66/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -173,7 +173,8 @@\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n-        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `**`) of: `uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;`\n+        uint amount0In = balance0 > _reserve0**amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n",
    "id": "67",
    "name": "mutants/67/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -173,7 +173,8 @@\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n-        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `/`) of: `uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;`\n+        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0/(_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n",
    "id": "68",
    "name": "mutants/68/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -173,7 +173,8 @@\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n-        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `%`) of: `uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;`\n+        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0%amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n",
    "id": "69",
    "name": "mutants/69/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -173,7 +173,8 @@\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n-        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `**`) of: `uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;`\n+        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0**amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n",
    "id": "70",
    "name": "mutants/70/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -173,7 +173,8 @@\n         balance0 = IERC20(_token0).balanceOf(address(this));\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n-        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n+        /// SwapArgumentsOperatorMutation(`_reserve0 - amount0Out` |==> `amount0Out - _reserve0`) of: `uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;`\n+        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (amount0Out - _reserve0) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n",
    "id": "71",
    "name": "mutants/71/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n-        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n+        /// SwapArgumentsOperatorMutation(`balance1 > _reserve1 - amount1Out` |==> `_reserve1 - amount1Out > balance1`) of: `uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;`\n+        uint amount1In = _reserve1 - amount1Out > balance1 ? balance1 - (_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n",
    "id": "72",
    "name": "mutants/72/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n-        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `+`) of: `uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;`\n+        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1+(_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n",
    "id": "73",
    "name": "mutants/73/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n-        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `%`) of: `uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;`\n+        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1%(_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n",
    "id": "74",
    "name": "mutants/74/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n-        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n+        /// BinaryOpMutation(`-` |==> `**`) of: `uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;`\n+        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1**(_reserve1 - amount1Out) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n",
    "id": "75",
    "name": "mutants/75/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -174,7 +174,8 @@\n         balance1 = IERC20(_token1).balanceOf(address(this));\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n-        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n+        /// SwapArgumentsOperatorMutation(`_reserve1 - amount1Out` |==> `amount1Out - _reserve1`) of: `uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;`\n+        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (amount1Out - _reserve1) : 0;\n         require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n",
    "id": "76",
    "name": "mutants/76/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -175,7 +175,8 @@\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n-        require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n+        /// DeleteExpressionMutation(`require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT')` |==> `assert(true)`) of: `require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');`\n+        assert(true);\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n         uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n",
    "id": "77",
    "name": "mutants/77/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -175,7 +175,8 @@\n         }\n         uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n         uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n-        require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n+        /// RequireMutation(`amount0In > 0 || amount1In > 0` |==> `true`) of: `require(amount0In > 0 || amount1In > 0, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');`\n+        require(true, 'UniswapV2: INSUFFICIENT_INPUT_AMOUNT');\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n         uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n",
    "id": "78",
    "name": "mutants/78/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -179,7 +179,8 @@\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n         uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n-        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K');\n+        /// RequireMutation(`balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2)` |==> `false`) of: `require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K');`\n+        require(false, 'UniswapV2: K');\n         }\n \n         _update(balance0, balance1, _reserve0, _reserve1);\n",
    "id": "79",
    "name": "mutants/79/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -179,7 +179,8 @@\n         { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n         uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n         uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n-        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K');\n+        /// BinaryOpMutation(`**` |==> `/`) of: `require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000**2), 'UniswapV2: K');`\n+        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(1000/2), 'UniswapV2: K');\n         }\n \n         _update(balance0, balance1, _reserve0, _reserve1);\n",
    "id": "80",
    "name": "mutants/80/contracts/UniswapV2Pair.sol",
    "original": "contracts/UniswapV2Pair.sol",
    "sourceroot": "/home/joyboy3/Audits/Certora/UniV2/forkedV2/v2-core"
  }
]